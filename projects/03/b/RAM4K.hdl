// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way (in=load, sel=address[0..2], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    Mux8Way16 (a=loop1, b=loop2, c=loop3, d=loop4, e=loop5, f=loop6, g=loop7, h=loop8, sel=address[0..2], out=out);
    RAM512 (in=in, load=load1, address=address[3..11], out=loop1);
    RAM512 (in=in, load=load2, address=address[3..11], out=loop2);
    RAM512 (in=in, load=load3, address=address[3..11], out=loop3);
    RAM512 (in=in, load=load4, address=address[3..11], out=loop4);
    RAM512 (in=in, load=load5, address=address[3..11], out=loop5);
    RAM512 (in=in, load=load6, address=address[3..11], out=loop6);
    RAM512 (in=in, load=load7, address=address[3..11], out=loop7);
    RAM512 (in=in, load=load8, address=address[3..11], out=loop8);
}