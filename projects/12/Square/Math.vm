function Math.init 2
push constant 16
call Array.new 1
pop static 0
push constant 0
pop local 0
push constant 1
pop local 1
label _while_label_20
push local 0
push constant 16
lt
not
if-goto _while_label_21
push static 0
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto _while_label_20
label _while_label_21
push constant 0
return
function Math.abs 0
push argument 0
push constant 0
lt
not
if-goto _if_label_22
push argument 0
neg
return
label _if_label_22
push argument 0
return
function Math.multiply 4
push argument 0
push constant 0
lt
push argument 1
push constant 0
gt
and
push argument 0
push constant 0
gt
push argument 1
push constant 0
lt
and
or
not
if-goto _if_label_23
push constant 1
neg
pop local 0
goto _if_label_24
label _if_label_23
push constant 0
pop local 0
label _if_label_24
push argument 0
call Math.abs 1
pop argument 0
push argument 1
call Math.abs 1
pop argument 1
push constant 0
pop local 1
push argument 0
pop local 2
push constant 0
pop local 3
label _while_label_25
push local 3
push constant 16
lt
not
if-goto _while_label_26
push argument 1
push local 3
push static 0
add
pop pointer 1
push that 0
and
push constant 0
gt
not
if-goto _if_label_27
push local 1
push local 2
add
pop local 1
label _if_label_27
push local 2
push local 2
add
pop local 2
push local 3
push constant 1
add
pop local 3
goto _while_label_25
label _while_label_26
push local 0
not
if-goto _if_label_28
push local 1
neg
return
goto _if_label_29
label _if_label_28
push local 1
return
label _if_label_29
function Math.divide 3
push argument 0
push constant 0
lt
push argument 1
push constant 0
gt
and
push argument 0
push constant 0
gt
push argument 1
push constant 0
lt
and
or
not
if-goto _if_label_30
push constant 1
neg
pop local 0
goto _if_label_31
label _if_label_30
push constant 0
pop local 0
label _if_label_31
push argument 0
call Math.abs 1
pop argument 0
push argument 1
call Math.abs 1
pop argument 1
push argument 1
push argument 0
gt
not
if-goto _if_label_32
push constant 0
return
label _if_label_32
push argument 0
push constant 2
push argument 1
call Math.multiply 2
call Math.divide 2
pop local 1
push argument 0
push constant 2
push local 1
call Math.multiply 2
push argument 1
call Math.multiply 2
sub
push argument 1
lt
not
if-goto _if_label_33
push constant 2
push local 1
call Math.multiply 2
pop local 2
goto _if_label_34
label _if_label_33
push constant 2
push local 1
call Math.multiply 2
push constant 1
add
pop local 2
label _if_label_34
push local 0
not
if-goto _if_label_35
push local 2
neg
return
goto _if_label_36
label _if_label_35
push local 2
return
label _if_label_36
function Math.sqrt 3
push constant 7
pop local 0
push constant 0
pop local 1
label _while_label_37
push local 0
push constant 0
gt
push local 0
push constant 0
eq
or
not
if-goto _while_label_38
push argument 0
push local 1
push local 0
push static 0
add
pop pointer 1
push that 0
add
push local 1
push local 0
push static 0
add
pop pointer 1
push that 0
add
call Math.multiply 2
sub
pop local 2
push local 2
push constant 0
gt
push local 2
push constant 0
eq
or
not
if-goto _if_label_39
push local 1
push local 0
push static 0
add
pop pointer 1
push that 0
add
pop local 1
label _if_label_39
push local 0
push constant 1
sub
pop local 0
goto _while_label_37
label _while_label_38
push local 1
return
function Math.max 0
push argument 0
push argument 1
gt
not
if-goto _if_label_40
push argument 0
return
goto _if_label_41
label _if_label_40
push argument 1
return
label _if_label_41
function Math.min 0
push argument 0
push argument 1
lt
not
if-goto _if_label_42
push argument 0
return
goto _if_label_43
label _if_label_42
push argument 1
return
label _if_label_43
