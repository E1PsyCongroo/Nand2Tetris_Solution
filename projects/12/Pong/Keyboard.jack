// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int keyboard;
    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;
        return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(keyboard);
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
        var char c;
        while (Keyboard.keyPressed() = 0) {}
        let c = Keyboard.keyPressed();
        while (~(Keyboard.keyPressed() = 0)) {}
        return c;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var char c;
        do Output.printString(message);
        let str = String.new(64);
        while (true) {
            let c = Keyboard.readChar();
            if (c = String.newLine()) {
                do Output.println();
                return str;
            }
            else {
                if (c = String.backSpace()) {
                    do Output.backSpace();
                    do str.eraseLastChar();
                }
                else {
                    do Output.printChar(c);
                    do str.appendChar(c);
                }
            }
        }
        return str;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
        var int result;
        var boolean negtive;
        var char c;
        let result = 0;
        let negtive = false;
        do Output.printString(message);
        while (true) {
            let c = Keyboard.readChar();
            if (c = String.newLine()) {
                do Output.println();
                if (negtive) {
                    return -result;
                }
                else {
                    return result;
                }
            }
            else {
                if (c = String.backSpace()) {
                    do Output.backSpace();
                    let result = result / 10;
                }
                else {
                    do Output.printChar(c);
                    if (c = 45) {
                        let negtive = ~negtive;
                    }
                    else {
                        let result = result * 10 + (c - 48);
                    }
                }
            }
        }
        return result;
    }
}
