// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array towToThe;
    /** Initializes the library. */
    function void init() {
        var int i, binary;
        let towToThe = Array.new(16);
        let i = 0;
        let binary = 1;
        while (i < 16) {
            let towToThe[i] = binary;
            let binary = binary + binary;
            let i = i + 1;
        }
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y.
     *  When a Jack compiler detects the multiplication operator '*' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var boolean negtive;
        var int sum, shiftedX, i;
        if (((x < 0) & (y > 0)) | ((x > 0) & (y < 0))) {
            let negtive = true;
        }
        else {
            let negtive = false;
        }
        let x = Math.abs(x);
        let y = Math.abs(y);
        let sum = 0;
        let shiftedX = x;
        let i = 0;
        while (i < 16) {
            if ((y & towToThe[i]) > 0) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let i = i + 1;
        }
        if (negtive) {
            return -sum;
        }
        else {
            return sum;
        }
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var boolean negtive;
        var int q, result;
        if (((x < 0) & (y < 0)) | ((x > 0) & (y > 0))) {
            let negtive = false;
        }
        else {
            let negtive = true;
        }
        let x = Math.abs(x);
        let y = Math.abs(y);
        if (y > x) {
            return 0;
        }
        let q = Math.divide(x, 2*y);
        if ((x-(2*q*y))<y) {
            let result = 2 * q;
        }
        else {
            let result = 2 * q + 1;
        }
        if (negtive) {
            return -result;
        }
        else {
            return result;
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int i, result, y;
        let i = 7;
        let result = 0;
        while ((i > 0) | (i = 0)) {
            let y = x - ((result + towToThe[i]) * (result + towToThe[i]));
            if ((y > 0) | (y = 0)) {
                let result = result + towToThe[i];
            }
            let i = i - 1;
        }
        return result;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b) {
            return a;
        }
        else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b) {
            return a;
        }
        else {
            return b;
        }
    }
}
